name: Policy Creation Workflow

on:
  workflow_dispatch:
  push:
    branches:
      - 10K_processor

jobs:
  policy_creation_test_and_deploy:
    runs-on: ubuntu-latest
    env:
      REGION: us-east1
      REPOSITORY_NAME: auditpulse-images

    defaults:
      run:
        working-directory: DataProcessing/Processor_10K

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.8"
          cache: "pip"

      - name: Install Dependencies
        run: pip install -r requirements.txt

      - name: Authenticate With GCP
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}

      - name: Run Tests
        env:
          PYTHONPATH: ${{ github.workspace }}/DataProcessing/Processor_10K
        run: pytest tests/

      - name: Test Success Notification
        if: success()
        run: echo "‚úÖ All tests passed. Proceeding to deployment."

      - name: Set up GCP CLI
        uses: google-github-actions/setup-gcloud@v1

      - name: Configure GCP Project
        run: gcloud config set project ${{ secrets.GCP_PROJECT_ID }}

      - name: Configure Docker for Google Artifact Registry
        run: gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev --quiet

      - name: Install Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose

      - name: Build and Push Images Using Docker Compose
        run: |
          IMAGE_REGISTRY="${{ env.REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ env.REPOSITORY_NAME }}/10k_processor"
          GITHUB_SHA="${{github.sha}}"
      
          # Debugging step 1: Print the original docker-compose.yml file
          echo "Original docker-compose.yml:"
          cat docker-compose.yml
      
          echo "üöÄ Updating docker-compose.yml to use Google Artifact Registry..."
          sed -i "s|image: .*_webserver|image: $IMAGE_REGISTRY/airflow-webserver:latest|g" docker-compose.yml
          sed -i "s|image: .*_scheduler|image: $IMAGE_REGISTRY/airflow-scheduler:latest|g" docker-compose.yml
      
          # Debugging step 2: Print the modified docker-compose.yml file
          echo "Modified docker-compose.yml:"
          cat docker-compose.yml
      
          echo "üöÄ Pulling Postgres image (only for local use, NOT pushing it)..."
          docker pull postgres:13  # ‚úÖ Ensures Postgres is available
      
          echo "üöÄ Building images using docker-compose..."
          docker-compose build
      
          echo "üöÄ Listing built Docker images:"
          docker images
          
          docker tag processor_10k_webserver:latest $IMAGE_REGISTRY/airflow-webserver:latest
          docker tag processor_10k_scheduler:latest $IMAGE_REGISTRY/airflow-scheduler:latest


          echo "üöÄ Pushing built images to Google Artifact Registry..."          
          docker push $IMAGE_REGISTRY/airflow-webserver:latest
          docker push $IMAGE_REGISTRY/airflow-scheduler:latest
      
          # docker-compose push webserver
          # docker-compose push scheduler
      
          echo "‚úÖ Successfully pushed Airflow images!"
      

      - name: Deployment Success Notification
        if: success()
        run: echo "‚úÖ Docker Compose images successfully created and pushed to Google Artifact Registry."

      - name: Deployment Failure Notification
        if: failure()
        run: echo "‚ùå Deployment failed. Check logs for more details."
